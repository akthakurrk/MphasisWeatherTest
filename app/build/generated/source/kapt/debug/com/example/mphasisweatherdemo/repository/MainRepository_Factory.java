// Generated by Dagger (https://dagger.dev).
package com.example.mphasisweatherdemo.repository;

import com.example.mphasisweatherdemo.networks.RetroServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainRepository_Factory implements Factory<MainRepository> {
  private final Provider<RetroServices> retroServiceProvider;

  public MainRepository_Factory(Provider<RetroServices> retroServiceProvider) {
    this.retroServiceProvider = retroServiceProvider;
  }

  @Override
  public MainRepository get() {
    return newInstance(retroServiceProvider.get());
  }

  public static MainRepository_Factory create(Provider<RetroServices> retroServiceProvider) {
    return new MainRepository_Factory(retroServiceProvider);
  }

  public static MainRepository newInstance(RetroServices retroService) {
    return new MainRepository(retroService);
  }
}
