// Generated by Dagger (https://dagger.dev).
package com.example.mphasisweatherdemo.networks;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetroClient_ProvideOkhttpClientFactory implements Factory<OkHttpClient> {
  private final RetroClient module;

  private final Provider<Context> contextProvider;

  public RetroClient_ProvideOkhttpClientFactory(RetroClient module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkhttpClient(module, contextProvider.get());
  }

  public static RetroClient_ProvideOkhttpClientFactory create(RetroClient module,
      Provider<Context> contextProvider) {
    return new RetroClient_ProvideOkhttpClientFactory(module, contextProvider);
  }

  public static OkHttpClient provideOkhttpClient(RetroClient instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideOkhttpClient(context));
  }
}
